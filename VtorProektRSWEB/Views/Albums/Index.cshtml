@model IEnumerable<VtorProektRSWEB.Models.Album>

@{
    ViewData["Title"] = "Music Store";
}

<style>
    .card {
        background-color: rgba(0, 0, 0, 0.6); /* Dark background for the cards with transparency */
        color: white;
        width: 18rem;
        height: 25rem;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .card-body {
        flex-grow: 1;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .card-title {
        font-size: 1.2rem;
        margin-bottom: 0.5rem;
    }

    .card-text {
        font-size: 1rem;
        margin-bottom: 0.5rem;
        line-height: 1.2;
    }

    .card-footer {
        margin-top: auto;
        padding: 0.75rem;
        background-color: rgba(0, 0, 0, 0.7);
    }

    .card-img-top {
        height: 150px; 
        object-fit: cover; 
    }

    .btn {
        margin-top: 10px;
    }

    .row {
        justify-content: center;
    }

    .btn-group {
        display: flex;
        gap: 10px; 
        justify-content: center; 
    }

</style>

<div class="background-overlay"></div>

<h1>Music Store</h1>

@if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
{
    <p>
        <a class="btn btn-success" asp-action="Create">Create New Album</a>
    </p>
}

<!-- Display Album Cards in a Grid -->
@for (int i = 0; i < Model.Count(); i++)
{
    var album = Model.ElementAt(i);

    if (i % 3 == 0)
    {
        @: <div class="row mt-3" style="justify-content:center;">
    }
    <div class="col-md-3 m-3">
        <div class="card">
            <img class="card-img-top" src="@album.AlbumCover" alt="Album Cover">
            <div class="card-body">
                <h3 class="card-title">@album.Title</h3>
                <h5 class="card-text">Artist: @album.ArtistName.Name</h5>
                <h5 class="card-text">Price in dollars: @album.priceVinyl</h5>
            </div>
            <div class="card-body">
                <div class="btn-group">
                    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                    {
                        <a class="btn btn-warning" asp-action="Edit" asp-route-id="@album.Id">Edit</a>
                        <a class="btn btn-danger" asp-action="Delete" asp-route-id="@album.Id">Delete</a>
                    }
                    <a class="btn btn-primary" asp-action="Details" asp-route-id="@album.Id">Details</a>
                </div>
            </div>
            <div class="card-footer">
                @if (User.Identity.IsAuthenticated)
                {
                    <form asp-controller="Albums" asp-action="CreateInvoice" method="get">
                        <input type="hidden" name="albumId" value="@album.Id" />
                        <button type="submit" class="btn btn-success">Buy Vinyl</button>
                    </form>
                }
            </div>
        </div>
    </div>
    if (i % 3 == 2)
    {
        @: </div>
    }
}

@if (Model.Count() % 3 != 0)
{
    @: </div> <!-- Close the last row if the number of items isn't divisible by 3 -->
}
